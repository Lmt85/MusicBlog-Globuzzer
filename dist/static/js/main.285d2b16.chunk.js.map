{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","id","isLoaded","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","artist","rating","review","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","author","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.285d2b16.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/'>{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({type: 'LOGIN_SUCCESS'})\n        }).catch((err)=>{\n            dispatch({type: 'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) =>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() =>{\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n            <li><NavLink to='/signin'>Log In</NavLink></li>\n        </ul>\n    )\n}\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst NavBar = (props) => {\n    const { auth, profile } = props;\n    console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>;\n    return (\n        <nav>\n            <div id=\"mainNav\">\n                <Link to= '/'>Marioplan</Link>\n                {auth.isLoaded && links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(NavBar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return (\n        <div className=\"notifications-section\">\n            <div className=\"card\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\"> Notifications </span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span>{item.user}</span>\n                                    <span>{item.content}</span>\n                                    <div>\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        }) }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) =>{\n        return(\n\n        <div className=\"card\">\n            <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n            <p className=\"date\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n            </div>\n        </div>\n            \n        )\n}\n\nexport default ProjectSummary;","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return(\n    <div className=\"project-list section\">\n       { projects && projects.map(project =>{\n           return(\n               <Link to={'/project/'+project.id} key={project.id} >\n               <ProjectSummary project={project} />\n               </Link>\n           )\n       })}\n       \n    </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render(){\n       // console.log(this.props);\n       const { projects, auth, notifications } = this.props;\n       if (!auth.uid) return <Redirect to='/signin' />\n        return(\n            <div id=\"dashboard-container\">\n                <div id=\"row\">\n                    <div id=\"col-1\">\n                        <ProjectList projects={projects}/>\n                    <div id=\"col-2\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStatesToProps = (state) => {\n    console.log(state); \n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStatesToProps),\n    firestoreConnect([\n        { collection: 'projects', limit: 10, orderBy: ['createdAt', 'desc']  },\n        { collection: 'notifications', limit: 4, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if (!auth.uid) return <Redirect to='/signin' />\n    if (project) {\n        return(\n        <div className=\"container project-details\">\n            <div className=\"card\">\n                <div className=\"content\">\n                    <span className=\"card-title\">{ project.title }</span>\n                    <p>{ project.artist }</p>\n                    <p>{ project.rating }</p>\n                    <p>{ project.review }</p>\n\n                </div>\n                <div className=\"card-action\">\n                    <div> Posted by { project.authorFirstName } { project.authorLastName }</div>\n                    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n        )\n    }else{\n        return (\n            <div className=\"container loading\">\n                <p>Loading project..</p>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return{\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n    render() {\n        const { authError, auth } = this.props\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"mform\">\n                    <h5 className=\"signIn\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"loginb\">Login</button>\n                        <div className=\"error-text\">\n                            { authError ? <p>{authError} </p> : null }\n                        </div>\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions' \n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n    render() {\n        const { auth, authError } = this.props\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"mform\">\n                    <h5 className=\"signIn\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"loginb\">Sign Up</button>\n                    </div>\n                    { authError ? <p>{ authError }</p> : null}\n                </form>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        artist: '',\n        rating: '',\n        review: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        //console.log(this.state)\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"mform\">\n                    <h5 className=\"signIn\">Review</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"artist\">Artist</label>\n                        <input type=\"text\" id=\"artist\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"rating\">Rating</label>\n                        <input type=\"number\" id=\"rating\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"review\">Review</label>\n                        <input type=\"text\" id=\"review\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"loginb\">Post</button>\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) =>{\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId ,\n            createdAt: new Date()\n        }).then(() =>{\n            dispatch({ type: 'CREATE_PROJECT', project});\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n        })\n    }\n};","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport NavBar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <NavBar/>\n      <Switch>\n        <Route exact path='/' component={Dashboard}/>\n        <Route path='/project/:id' component={ProjectDetails}/>\n        <Route path='/signin' component={SignIn}/>\n        <Route path='/signup' component={SignUp}/>\n        <Route path='/create' component={CreateProject}/>\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n\n        default:\n            return state;\n\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: '1', title:'MBDTF', author:'Ye', rating:'10',review:'fantastic'},\n        {id: '2', title:'Yeezus', author:'Ye', rating:'9',review:'great'},\n        {id: '3', title:'808s', author:'Ye', rating:'8',review:'good'}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer \n});\n\nexport default rootReducer\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAt6qhnrYe8FurMTsbFb2sQ7rLlr_ltf34\",\n    authDomain: \"musicblog-fec85.firebaseapp.com\",\n    databaseURL: \"https://musicblog-fec85.firebaseio.com\",\n    projectId: \"musicblog-fec85\",\n    storageBucket: \"musicblog-fec85.appspot.com\",\n    messagingSenderId: \"640080973591\",\n    appId: \"1:640080973591:web:a96d724d1938226e527152\",\n    measurementId: \"G-HBCBMH6E60\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  \n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from \"firebase/app\";\n\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig) \n  )\n);\nconst config = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n};\n\n\nconst rrfProps = {\n  firebase,\n  config,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store}>\n   <ReactReduxFirebaseProvider {...rrfProps}>\n    <App />\n  </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}